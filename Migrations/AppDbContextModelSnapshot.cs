// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StoreApplication;

#nullable disable

namespace StoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StoreApplication.Models.OrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52b9250d-eae2-46b7-b8e8-c9383903fcdb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 8, 1, 12, 19, 26, 95, DateTimeKind.Unspecified).AddTicks(9499), new TimeSpan(0, 3, 0, 0, 0)),
                            ProductId = new Guid("94ca0610-1e10-4354-834c-1fc2e89b54fd"),
                            UserId = new Guid("9033b2f9-4225-48f1-b981-30bdebbb316b")
                        },
                        new
                        {
                            Id = new Guid("d5463836-4b8d-42da-8424-d7e3f275b840"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 8, 1, 12, 19, 26, 95, DateTimeKind.Unspecified).AddTicks(9515), new TimeSpan(0, 3, 0, 0, 0)),
                            ProductId = new Guid("94ca0610-1e10-4354-834c-1fc2e89b54fd"),
                            UserId = new Guid("262f23cc-6135-4f4c-942e-baf59acfcca2")
                        });
                });

            modelBuilder.Entity("StoreApplication.Models.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94ca0610-1e10-4354-834c-1fc2e89b54fd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 8, 1, 12, 19, 26, 95, DateTimeKind.Unspecified).AddTicks(8221), new TimeSpan(0, 3, 0, 0, 0)),
                            Description = "Some description about first product",
                            Name = "Product_1",
                            Price = 0m
                        },
                        new
                        {
                            Id = new Guid("ba1f28f1-1d3a-420e-8425-328f86e0cdf6"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 8, 1, 12, 19, 26, 95, DateTimeKind.Unspecified).AddTicks(8269), new TimeSpan(0, 3, 0, 0, 0)),
                            Description = "Some description about second product",
                            Name = "Product_2",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("StoreApplication.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9033b2f9-4225-48f1-b981-30bdebbb316b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 8, 1, 12, 19, 26, 95, DateTimeKind.Unspecified).AddTicks(8776), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "username1@gmail.com",
                            Password = "Iw2qLeC1DLXuJmHetNVKvut0120ZQnXg2tK/uk0Yaw8=",
                            Username = "Username_1"
                        },
                        new
                        {
                            Id = new Guid("262f23cc-6135-4f4c-942e-baf59acfcca2"),
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 8, 1, 12, 19, 26, 95, DateTimeKind.Unspecified).AddTicks(9400), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "username2@gmail.com",
                            Password = "Iw2qLeC1DLXuJmHetNVKvut0120ZQnXg2tK/uk0Yaw8=",
                            Username = "Username_2"
                        });
                });

            modelBuilder.Entity("StoreApplication.Models.OrderModel", b =>
                {
                    b.HasOne("StoreApplication.Models.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApplication.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
